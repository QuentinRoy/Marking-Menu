{"version":3,"file":"marking-menu.js","sources":["node_modules/rad2deg/source/index.js","src/utils.js","src/move/pointer-events.js","src/move/linear-drag.js","src/move/long-move.js","src/move/dwelling.js","src/move/draw.js","src/navigation/novice-navigation.js","src/recognizer/find-points.js","src/recognizer/articulation-points.js","src/recognizer/stroke-length.js","src/recognizer/recognize-mm-stroke.js","src/navigation/expert-navigation.js","src/navigation/navigation.js","src/layout/menu.js","src/layout/stroke.js","node_modules/raf-throttle/lib/rafThrottle.js","src/layout/connect.js","src/layout/gesture-feedback.js","src/model.js","src/main.js"],"sourcesContent":["module.exports = function (angleInRadians) {\n    // angleInDegree = angleInRadians * (180 / Math.PI)  \n    return angleInRadians * 57.29577951308232\n}\n","import rad2deg from 'rad2deg';\n\n/**\n * @param {number} a the dividend\n * @param {number} n the divisor\n * @return {number} The modulo of `a` over `n` (% is not exactly modulo but remainder).\n */\nexport const mod = (a, n) => ((a % n) + n) % n;\n\n/**\n * @param {number} alpha a first angle (in degrees)\n * @param {number} beta a second angle (in degrees)\n * @return {number} The (signed) delta between the two angles (in degrees).\n */\nexport const deltaAngle = (alpha, beta) => mod(beta - alpha + 180, 360) - 180;\n\n/**\n * Calculate the euclidean distance between two\n * points.\n *\n * @param {List<number>} point1 - The first point\n * @param {List<number>} point2 - The second point\n * @return {number} The distance between the two points.\n */\nexport const dist = (point1, point2) => {\n  const sum = point1.reduce((acc, x1i, i) => {\n    const x2i = point2[i];\n    return acc + (x2i - x1i) ** 2;\n  }, 0);\n  return Math.sqrt(sum);\n};\n\nconst ANGLE_ROUNDING = 10e-8;\n/**\n * @param {number[]} a - The first point.\n * @param {number[]} b - The second point, center of the angle.\n * @param {number[]} c - The third point.\n * @return {number} The angle abc (in degrees) rounded at the 8th decimal.\n */\nexport const angle = (a, b, c) => {\n  const lab = dist(a, b);\n  const lbc = dist(b, c);\n  const lac = dist(a, c);\n  const cos = (lab ** 2 + lbc ** 2 - lac ** 2) / (2 * lab * lbc);\n  // Due to rounding, it can happen than cos ends up being slight > 1 or slightly < -1.\n  // This fixes it.\n  const adjustedCos = Math.max(-1, Math.min(1, cos));\n  const angleABC = rad2deg(Math.acos(adjustedCos));\n  // Round the angle to avoid rounding issues.\n  return Math.round(angleABC / ANGLE_ROUNDING) * ANGLE_ROUNDING;\n};\n\n/**\n * @callback findMaxEntryComp\n * @param {*} item1 - A first item.\n * @param {*} item2 - A second item.\n * @return {number} A positive number if the second item should be ranked higher than the first,\n *                  a negative number if it should be ranked lower and 0 if they should be ranked\n *                  the same.\n */\n\n/**\n * @param {List} list - A list of items.\n * @param {findMaxEntryComp} comp - A function to calculate a value from an item.\n * @return {[index, item]} The found entry.\n */\nexport const findMaxEntry = (list, comp) =>\n  list.slice(0).reduce(\n    (result, item, index) => {\n      if (comp(result[1], item) > 1) return [index, item];\n      return result;\n    },\n    [0, list[0]]\n  );\n\n/**\n * Converts the coordinates of a point in polar coordinates (angle in degrees).\n *\n * @param  {number[]} point - A point.\n * @param  {number[]} [pole=[0, 0]] - The pole of a polar coordinate\n *                                    system\n * @return {{azymuth, radius}} The angle coordinate of the point in the polar\n *                             coordinate system in degrees.\n */\nexport const toPolar = ([px, py], [cx, cy] = [0, 0]) => {\n  const x = px - cx;\n  const y = py - cy;\n  return {\n    azymuth: rad2deg(Math.atan2(y, x)),\n    radius: Math.sqrt(x * x + y * y),\n  };\n};\n","// Create a custom pointer event from a touch event.\nexport const createPEventFromTouchEvent = (touchEvt) => {\n  const touchList = Array.from(touchEvt.targetTouches);\n  const sumX = touchList.reduce((acc, t) => acc + t.clientX, 0);\n  const sumY = touchList.reduce((acc, t) => acc + t.clientY, 0);\n  const meanX = sumX / touchList.length;\n  const meanY = sumY / touchList.length;\n  return {\n    originalEvent: touchEvt,\n    position: [meanX, meanY],\n    timeStamp: touchEvt.timeStamp,\n  };\n};\n\n// Create a custom pointer from a mouse event.\nexport const createPEventFromMouseEvent = (mouseEvt) => ({\n  originalEvent: mouseEvt,\n  position: [mouseEvt.clientX, mouseEvt.clientY],\n  timeStamp: mouseEvt.timeStamp,\n});\n","import { fromEvent, of, merge } from 'rxjs';\nimport {\n  map,\n  takeUntil,\n  publishBehavior,\n  filter,\n  startWith,\n} from 'rxjs/operators';\nimport {\n  createPEventFromMouseEvent,\n  createPEventFromTouchEvent,\n} from './pointer-events';\n\n// Higher order observable tracking mouse drags.\nexport const mouseDrags = (rootDOM) =>\n  fromEvent(rootDOM, 'mousedown').pipe(\n    map((downEvt) => {\n      // Make sure we include the first mouse down event.\n      const drag$ = merge(of(downEvt), fromEvent(rootDOM, 'mousemove')).pipe(\n        takeUntil(fromEvent(rootDOM, 'mouseup')),\n        // Publish it as a behavior so that any new subscription will\n        // get the last drag position.\n        publishBehavior()\n      );\n      drag$.connect();\n      return drag$;\n    }),\n    map((o) => o.pipe(map((...args) => createPEventFromMouseEvent(...args))))\n  );\n\n// Higher order observable tracking touch drags.\nexport const touchDrags = (rootDOM) =>\n  fromEvent(rootDOM, 'touchstart').pipe(\n    // Menu is supposed to have pointer-events: none so we can safely rely on\n    // targetTouches.\n    filter((evt) => evt.targetTouches.length === 1),\n    map((firstEvent) => {\n      const drag$ = fromEvent(rootDOM, 'touchmove').pipe(\n        startWith(firstEvent),\n        takeUntil(\n          merge(\n            fromEvent(rootDOM, 'touchend'),\n            fromEvent(rootDOM, 'touchcancel'),\n            fromEvent(rootDOM, 'touchstart')\n          ).pipe(filter((evt) => evt.targetTouches.length !== 1))\n        ),\n        publishBehavior()\n      );\n      // FIXME: the line below retains the subscription until next touch end.\n      drag$.connect();\n      return drag$;\n    }),\n    map((o) => o.pipe(map(createPEventFromTouchEvent)))\n  );\n\n/**\n * @param {HTMLElement} rootDOM - the DOM element to observe pointer events on.\n * @return {Observable} A higher order observable that drag observables. The sub-observables are\n *                      published as behaviors so that any new subscription immediately get the last\n *                      position.\n * @param {function[]} [dragObsFactories] - factory to use to observe drags.\n */\nconst watchDrags = (rootDOM, dragObsFactories = [touchDrags, mouseDrags]) =>\n  merge(...dragObsFactories.map((f) => f(rootDOM)));\n\nexport default watchDrags;\n","import { scan, filter, map } from 'rxjs/operators';\nimport { dist } from '../utils';\n\n/**\n * Filter out small movements out of a drag observable.\n * @param {Observable} drag$ - An observable on drag movements.\n * @param {number} movementsThreshold - The threshold below which movements are considered\n *                                      static.\n * @return {Observable} An observable only emitting on long enough movements.\n */\nexport default (drag$, movementsThreshold = 0) =>\n  drag$.pipe(\n    scan(([prev], cur) => {\n      // Initial value.\n      if (prev == null) return [cur, false];\n\n      // End of drag can never be a long move. Such events aren't supposed to be\n      // emitted by drag observable though.\n      if (cur.type === 'end' || cur.type === 'cancel') return [cur, false];\n\n      // If the distance is still below the threshold, re-emit the previous\n      // event. It will be filtered-out later, but will come back again as\n      // prev on the next scan call.\n      if (dist(prev.position, cur.position) < movementsThreshold)\n        return [prev, false];\n\n      // Otherwise, emit the new event.\n      return [cur, true];\n    }, []),\n    filter(([, pass]) => pass),\n    map((x) => x[0])\n  );\n","import { merge } from 'rxjs';\nimport {\n  debounceTime,\n  takeUntil,\n  first,\n  withLatestFrom,\n  last,\n} from 'rxjs/operators';\nimport longMoves from './long-move';\n\n/**\n * @param {Observable} drag$ - An observable on drag movements.\n * @param {number} delay - The time (in ms) to wait before considering an absence of movements\n *                         as a dwell.\n * @param {number} [movementsThreshold=0] - The threshold below which movements are considered\n *                                          static.\n * @param {Scheduler} [scheduler] - The scheduler to use for managing the timers that handle the timeout\n * for each value\n * @return {Observable} An observable on dwellings in the movement.\n */\nexport default (drag$, delay, movementsThreshold = 0, scheduler = undefined) =>\n  merge(drag$.pipe(first()), longMoves(drag$, movementsThreshold)).pipe(\n    // Emit when no long movements happend for delay time.\n    debounceTime(delay, scheduler),\n    // debounceTime emits the last item when the source observable completes.\n    // We don't want that here so we only take until drag is done.\n    takeUntil(drag$.pipe(last())),\n    // Make sure we do emit the last position.\n    withLatestFrom(drag$, (_, last_) => last_)\n  );\n","import { scan } from 'rxjs/operators';\n\n/**\n * Augment a drag$ observable so that events also include the stroke.\n * @param {Observable} drag$ - An observable of drag movements.\n * @param {List<number[]>} initStroke - Initial stroke.\n * @return {Observable} An observable on the gesture drawing.\n */\nexport default (drag$, { initStroke = [], type = undefined }) => {\n  const typeOpts = type === undefined ? {} : { type };\n  return drag$.pipe(\n    scan(\n      (acc, notification) => ({\n        stroke: [...acc.stroke, notification.position],\n        ...typeOpts,\n        ...notification,\n      }),\n      { stroke: initStroke }\n    )\n  );\n};\n","import { merge } from 'rxjs';\nimport {\n  scan,\n  startWith,\n  share,\n  last,\n  map,\n  filter,\n  switchAll,\n  take,\n} from 'rxjs/operators';\nimport { toPolar } from '../utils';\nimport { dwellings } from '../move';\n\nexport const noviceMoves = (drag$, menu, { menuCenter, minSelectionDist }) => {\n  // Analyse local movements.\n  const moves$ = drag$.pipe(\n    scan(\n      (last_, n) => {\n        const { azymuth, radius } = toPolar(n.position, menuCenter);\n        const active =\n          radius < minSelectionDist ? null : menu.getNearestChild(azymuth);\n        const type = last_.active === active ? 'move' : 'change';\n        return { active, type, azymuth, radius, ...n };\n      },\n      { active: null }\n    ),\n    startWith({\n      type: 'open',\n      menu,\n      center: menuCenter,\n      timeStamp: performance ? performance.now() : Date.now(),\n    }),\n    share()\n  );\n\n  const end$ = moves$.pipe(\n    startWith({}),\n    last(),\n    map((n) => ({\n      ...n,\n      type: n.active && n.active.isLeaf() ? 'select' : 'cancel',\n      selection: n.active,\n    }))\n  );\n\n  return merge(moves$, end$).pipe(share());\n};\n\nexport const menuSelection = (\n  move$,\n  { subMenuOpeningDelay, movementsThreshold, minMenuSelectionDist }\n) =>\n  // Wait for a pause in the movements.\n  dwellings(move$, subMenuOpeningDelay, movementsThreshold).pipe(\n    // Filter dwellings occurring outside of the selection area.\n    filter(\n      (n) => n.active && n.radius > minMenuSelectionDist && !n.active.isLeaf()\n    )\n  );\n\nexport const subMenuNavigation = (menuSelection$, drag$, subNav, navOptions) =>\n  menuSelection$.pipe(\n    map((n) =>\n      subNav(drag$, n.active, { menuCenter: n.position, ...navOptions })\n    )\n  );\n\n/**\n * @param {Observable} drag$ - An observable of drag movements.\n * @param {MMItem} menu - The model of the menu.\n * @param {object} options - Configuration options.\n * @return {Observable} An observable on the menu navigation events.\n */\nconst noviceNavigation = (\n  drag$,\n  menu,\n  {\n    minSelectionDist,\n    minMenuSelectionDist,\n    movementsThreshold,\n    subMenuOpeningDelay,\n    menuCenter,\n    noviceMoves: noviceMoves_ = noviceMoves,\n    menuSelection: menuSelection_ = menuSelection,\n    subMenuNavigation: subMenuNavigation_ = subMenuNavigation,\n  }\n) => {\n  // Observe the local navigation.\n  const move$ = noviceMoves_(drag$, menu, {\n    menuCenter,\n    minSelectionDist,\n  }).pipe(share());\n\n  // Look for (sub)menu selection.\n  const menuSelection$ = menuSelection_(move$, {\n    subMenuOpeningDelay,\n    movementsThreshold,\n    minMenuSelectionDist,\n  });\n\n  // Higher order observable on navigation inside sub-menus.\n  const subMenuNavigation$ = subMenuNavigation_(\n    menuSelection$,\n    drag$,\n    noviceNavigation,\n    {\n      minSelectionDist,\n      minMenuSelectionDist,\n      movementsThreshold,\n      subMenuOpeningDelay,\n      noviceMoves: noviceMoves_,\n      menuSelection: menuSelection_,\n      subMenuNavigation: subMenuNavigation_,\n    }\n  );\n\n  // Start with local navigation but switch to the first sub-menu navigation\n  // (if any).\n  return subMenuNavigation$.pipe(take(1), startWith(move$), switchAll());\n};\n\nexport default noviceNavigation;\n","import { dist, angle } from '../utils';\n\n/**\n * @param {Array.<number[]>} pointList - The list of points.\n * @param {number} minDist - A distance.\n * @param {object} options - Options.\n * @param {number} [options.direction=1] - The direction of the lookup: negative values means\n *                                         descending lookup.\n * @param {number} [options.startIndex] - The index of the first point to investigate inside\n *                                        pointList. If not provided, the lookup will start\n *                                        from the start or the end of pointList depending\n *                                        on `direction`.\n * @param {number[]} [options.refPoint=pointList[startIndex]] - The reference point.\n * @return {number} The index of the first point inside pointList that it at least `minDist` from\n *                  `refPoint`.\n */\nexport const findNextPointFurtherThan = (\n  pointList,\n  minDist,\n  {\n    direction = 1,\n    startIndex = direction > 0 ? 0 : pointList.length - 1,\n    refPoint = pointList[startIndex],\n  } = {}\n) => {\n  const step = direction / Math.abs(direction);\n  const n = pointList.length;\n  for (let i = startIndex; i < n && i >= 0; i += step) {\n    if (dist(refPoint, pointList[i]) >= minDist) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n/**\n * @param {number[]} pointA - The point a.\n * @param {number[]} pointC - The point b.\n * @param {List.<number[]>} pointList - A list of points.\n * @param {number[]} options - Options.\n * @param {number} [options.startIndex=0] - The index of the first point to investigate inside\n *                                          pointList.\n * @param {number} [options.endIndex=pointList.length - 1] - The index of the first point to\n *                                                           investigate inside pointList.\n * @return {{index, angle}} The index of the point b of pointList that maximizes the angle abc and\n *                          the angle abc.\n */\nexport const findMiddlePointForMinAngle = (\n  pointA,\n  pointC,\n  pointList,\n  { startIndex = 0, endIndex = pointList.length - 1 } = {}\n) => {\n  let minAngle = Infinity;\n  let maxAngleIndex = -1;\n  for (let i = startIndex; i <= endIndex; i += 1) {\n    const thisAngle = angle(pointA, pointList[i], pointC);\n    if (thisAngle < minAngle) {\n      minAngle = thisAngle;\n      maxAngleIndex = i;\n    }\n  }\n  return { index: maxAngleIndex, angle: minAngle };\n};\n","import {\n  findNextPointFurtherThan,\n  findMiddlePointForMinAngle,\n} from './find-points';\n\n/**\n * @typedef {number[]} Point\n */\n\n/**\n * A segment.\n * @typedef {Point[2]} Segment\n */\n\n/**\n * @param {Point[]} stroke - The points of a stroke.\n * @param {number} expectedSegmentLength - The expected length of a segment\n *                                         (usually strokeLength / maxMenuDepth).\n * @param {number} angleThreshold - The min angle threshold in a point required for it to be\n *                                  considered an articulation points.\n * @return {Point[]} The list of articulation points.\n */\nconst getStrokeArticulationPoints = (\n  stroke,\n  expectedSegmentLength,\n  angleThreshold\n) => {\n  const n = stroke.length;\n  if (n === 0) return [];\n  const w = expectedSegmentLength * 0.3;\n\n  // Add the first point of the stroke.\n  const articulationPoints = [stroke[0]];\n\n  let ai = 0;\n  let a = stroke[ai];\n  while (ai < n) {\n    const ci = findNextPointFurtherThan(stroke, w, {\n      startIndex: ai + 2,\n      refPoint: a,\n    });\n    if (ci < 0) break;\n    const c = stroke[ci];\n    const labi = findNextPointFurtherThan(stroke, w / 8, {\n      startIndex: ai + 1,\n      refPoint: a,\n    });\n    const lbci = findNextPointFurtherThan(stroke, w / 8, {\n      startIndex: ci - 1,\n      refPoint: c,\n      direction: -1,\n    });\n    const { index: bi, angle: angleABC } = findMiddlePointForMinAngle(\n      a,\n      stroke[ci],\n      stroke,\n      {\n        startIndex: labi,\n        endIndex: lbci,\n      }\n    );\n    if (bi > 0 && Math.abs(180 - angleABC) > angleThreshold) {\n      const b = stroke[bi];\n      articulationPoints.push(b);\n      a = b;\n      ai = bi;\n    } else {\n      ai += 1;\n      a = stroke[ai];\n    }\n  }\n\n  // Add the last point of the stroke.\n  articulationPoints.push(stroke[stroke.length - 1]);\n  return articulationPoints;\n};\n\nexport default getStrokeArticulationPoints;\n","import { dist } from '../utils';\n\n/**\n * @param {List<List<number>>} stroke - A stroke.\n * @return {number} The length of the stroke `stroke`.\n */\nexport default (stroke) =>\n  stroke.reduce(\n    (res, current) => {\n      const prev = res.prev || current;\n      return {\n        prev: current,\n        length: res.length + dist(prev, current),\n      };\n    },\n    { length: 0 }\n  ).length;\n","import rad2deg from 'rad2deg';\nimport getStrokeArticulationPoints from './articulation-points';\nimport { dist, findMaxEntry } from '../utils';\nimport strokeLength from './stroke-length';\n\n/**\n * @param {Point[]} points - A list of points.\n * @return {Segment[]} The list of segments joining the points of `points`.\n */\nexport const pointsToSegments = (points) =>\n  points.slice(1).reduce(\n    ({ segments, last }, current) => {\n      segments.push([last, current]);\n      return { segments, last: current };\n    },\n    { last: points[0], segments: [] }\n  ).segments;\n\n/**\n * @param {Item} model - The marking menu model.\n * @param {{ angle }[]} segments - A list of segments to walk the model.\n * @param {number} [startIndex=0] - The start index in the angle list.\n * @return {Item} The corresponding item found by walking the model.\n */\nexport const walkMMModel = (model, segments, startIndex = 0) => {\n  if (!model || segments.length === 0 || model.isLeaf()) return null;\n  const item = model.getNearestChild(segments[startIndex].angle);\n  if (startIndex + 1 >= segments.length) {\n    return item;\n  }\n  return walkMMModel(item, segments, startIndex + 1);\n};\n\nexport const segmentAngle = (a, b) =>\n  rad2deg(Math.atan2(b[1] - a[1], b[0] - a[0]));\n\n/**\n * @param {{angle, length}[]} segments - A list of segments.\n * @return {{angle, length}[]} A new list of segments with the longest segments divided in two.\n */\nexport const divideLongestSegment = (segments) => {\n  const [longestI, longest] = findMaxEntry(\n    segments,\n    (s1, s2) => s2.length - s1.length\n  );\n  return [\n    ...segments.slice(0, longestI),\n    { length: longest.length / 2, angle: longest.angle },\n    { length: longest.length / 2, angle: longest.angle },\n    ...segments.slice(longestI + 1),\n  ];\n};\n\n/**\n * @param {Item} model - The marking menu model.\n * @param {{length, angle}[]} segments - A list of segments.\n * @param {number} [maxDepth=model.getMaxDepth()] - The maximum depth of the item.\n * @return {Item} The selected item.\n */\nexport const findMMItem = (model, segments, maxDepth = model.getMaxDepth()) => {\n  // If there is not segments, there is no selection to find.\n  if (!segments.length) return null;\n  // While we haven't found a leaf item, divide the longest segment and walk the model.\n  let currentSegments = segments;\n  let currentItem = null;\n  while (currentSegments.length <= maxDepth) {\n    currentItem = walkMMModel(model, currentSegments);\n    if (currentItem && currentItem.isLeaf()) return currentItem;\n    currentSegments = divideLongestSegment(currentSegments);\n  }\n  return currentItem;\n};\n\n/**\n * @param {List.<number[]>} stroke - A list of points.\n * @param {Item} model - The marking menu model.\n * @param {object} [options] - Additional options.\n * @param {number} [maxDepth] - The maximum menu depth to walk. If negative,\n * start from the maximum depth of the model.\n * @param {boolean} [requireMenu=false] - Look for a menu item. This\n * works best with a negative value for maxDepth.\n * @param {boolean} [requireLeaf=!requireMenu] - Look for a leaf.\n * @return {Item} The item recognized by the stroke.\n */\nconst recognizeMMStroke = (\n  stroke,\n  model,\n  {\n    maxDepth: maxDepth_ = model.getMaxDepth(),\n    requireMenu = false,\n    requireLeaf = !requireMenu,\n  } = {}\n) => {\n  if (requireLeaf && requireMenu) {\n    throw new Error('The result cannot be both a leaf and a menu');\n  }\n  const maxDepth = maxDepth_ < 0 ? model.getMaxDepth() + maxDepth_ : maxDepth_;\n  const maxMenuBreadth = model.getMaxBreadth();\n  const length = strokeLength(stroke);\n  const expectedSegmentLength = length / maxDepth;\n  const sensitivity = 0.75;\n  const angleThreshold = 360 / maxMenuBreadth / 2 / sensitivity;\n  const articulationPoints = getStrokeArticulationPoints(\n    stroke,\n    expectedSegmentLength,\n    angleThreshold\n  );\n  const minSegmentSize = expectedSegmentLength / 3;\n  // Get the segments of the marking menus.\n  const segments = pointsToSegments(articulationPoints)\n    // Change the representation of the segment to include its length.\n    .map((seg) => ({ points: seg, length: dist(...seg) }))\n    // Remove the segments that are too small.\n    .filter((seg) => seg.length > minSegmentSize)\n    // Change again the representation of the segment to include its length but not its\n    // its points anymore.\n    .map((seg) => ({ angle: segmentAngle(...seg.points), length: seg.length }));\n  const item = findMMItem(model, segments, maxDepth);\n  if (requireLeaf) {\n    return item && item.isLeaf() ? item : null;\n  }\n  if (requireMenu) {\n    return item && item.isLeaf() ? item.parent : item;\n  }\n  return item;\n};\n\nexport default recognizeMMStroke;\n","import { merge } from 'rxjs';\nimport { startWith, last, map, share } from 'rxjs/operators';\nimport { draw } from '../move';\nimport recognize from '../recognizer';\n\n/**\n * @param {Observable} drag$ - An observable of drag movements.\n * @param {MMItem} model - The model of the menu.\n * @param {List<number[]>} initStroke - Initial stroke.\n * @return {Observable} An observable on the gesture drawing and recognition.\n */\nexport default (drag$, model, initStroke = []) => {\n  // Observable on gesture drawing.\n  const draw$ = draw(drag$, { initStroke, type: 'draw' }).pipe(share());\n\n  // Track the end of the drawing and attempt to recognize the gesture.\n  const end$ = draw$.pipe(\n    startWith(null),\n    last(),\n    map((e) => {\n      if (!e) return { type: 'cancel' };\n      const selection = recognize(e.stroke, model);\n      if (selection) {\n        return { ...e, type: 'select', selection };\n      }\n      return { ...e, type: 'cancel' };\n    })\n  );\n  return merge(draw$, end$);\n};\n","import { race, of } from 'rxjs';\nimport {\n  take,\n  map,\n  skip,\n  startWith,\n  switchAll,\n  mergeMap,\n  exhaustMap,\n} from 'rxjs/operators';\nimport noviceNavigation from './novice-navigation';\nimport expertNavigation from './expert-navigation';\nimport { longMoves, dwellings, draw } from '../move';\nimport recognize from '../recognizer';\n\nexport const confirmedNoviceNavigationHOO = (drag$, start, model, options) =>\n  dwellings(drag$, options.noviceDwellingTime, options.movementsThreshold).pipe(\n    take(1),\n    map(() =>\n      (start != null ? of(start) : drag$).pipe(\n        take(1),\n        mergeMap((start_) =>\n          noviceNavigation(\n            // Same as before, skip the first.\n            drag$.pipe(skip(1)),\n            model,\n            { ...options, menuCenter: start_.position }\n          ).pipe(map((n) => ({ ...n, mode: 'novice' })))\n        )\n      )\n    )\n  );\n\nexport const expertToNoviceSwitchHOO = (drag$, model, initStroke, options) =>\n  dwellings(\n    draw(drag$, { initStroke }),\n    options.noviceDwellingTime,\n    options.movementsThreshold\n  ).pipe(\n    take(1),\n    map((evt) => {\n      // Look for the furthest menu (not leaf).\n      const menu = recognize(evt.stroke, model, {\n        maxDepth: -1,\n        requireMenu: true,\n      });\n      if (!menu || menu.isRoot()) {\n        return of({ ...evt, type: 'cancel' });\n      }\n      // Start a novice navigation from there.\n      return noviceNavigation(drag$.pipe(skip(1)), menu, {\n        ...options,\n        menuCenter: evt.position,\n      });\n    })\n  );\n\nexport const confirmedExpertNavigationHOO = (\n  drag$,\n  model,\n  {\n    expertToNoviceSwitchHOO: expertToNoviceSwitchHOO_ = expertToNoviceSwitchHOO,\n    ...options\n  } = {}\n) =>\n  longMoves(draw(drag$, { type: 'draw' }), options.movementsThreshold).pipe(\n    take(1),\n    map((e) => {\n      const expertNav$ = expertNavigation(\n        // Drag always return the last value when observed, in this case we are\n        // not interested in it as it has already been took into account.\n        drag$.pipe(skip(1)),\n        model,\n        e.stroke\n      ).pipe(map((n) => ({ ...n, mode: 'expert' })));\n      return expertToNoviceSwitchHOO_(drag$, model, e.stroke, options).pipe(\n        startWith(expertNav$),\n        switchAll()\n      );\n    })\n  );\n\nexport const startup = (drag$, model) =>\n  expertNavigation(drag$, model).pipe(\n    map((n, i) =>\n      i === 0\n        ? { ...n, type: 'start', mode: 'startup' }\n        : { ...n, mode: 'startup' }\n    )\n  );\n\nexport const navigationFromDrag = (\n  drag$,\n  start,\n  model,\n  options,\n  {\n    confirmedExpertNavigationHOO:\n      confirmedExpertNavigationHOO_ = confirmedExpertNavigationHOO,\n    confirmedNoviceNavigationHOO:\n      confirmedNoviceNavigationHOO_ = confirmedNoviceNavigationHOO,\n    startup: startup_ = startup,\n  } = {}\n) => {\n  // Start up observable (while neither expert or novice are confirmed).\n  const startUp$ = startup_(drag$, model);\n\n  // Observable on confirmed expert navigation.\n  const confirmedExpertNavigation$$ = confirmedExpertNavigationHOO_(\n    drag$,\n    model,\n    options\n  );\n\n  // Observable on confirmed novice navigation.\n  const confirmedNoviceNavigation$$ = confirmedNoviceNavigationHOO_(\n    drag$,\n    start,\n    model,\n    options\n  );\n\n  // Observable on expert or novice navigation once confirmed.\n  const confirmedNavigation$$ = race(\n    confirmedExpertNavigation$$,\n    confirmedNoviceNavigation$$\n  );\n\n  // Start with startup navigation (similar to expert) but switch to the\n  // confirmed navigation as soon as it is settled.\n  return confirmedNavigation$$.pipe(startWith(startUp$), switchAll());\n};\n\n/**\n * @param {Observable} drags$ - A higher order observable on drag movements.\n * @param {MMItem} menu - The model of the menu.\n * @param {object} options - Configuration options (see {@link ../index.js}).\n * @param {function} [navigationFromDrag_] - function to convert a drags higher\n *                                         order observable to a navigation\n *                                         observable.\n * @return {Observable} An observable on the marking menu events.\n */\nexport default (\n  drags$,\n  menu,\n  options,\n  navigationFromDrag_ = navigationFromDrag\n) =>\n  drags$.pipe(\n    exhaustMap((drag$) =>\n      drag$.pipe(\n        take(1),\n        mergeMap((start) => navigationFromDrag_(drag$, start, menu, options))\n      )\n    )\n  );\n","import './menu.scss';\n\nconst template = ({ items, center }, doc) => {\n  const main = doc.createElement('div');\n  main.className = 'marking-menu';\n  main.style.left = `${center[0]}px`;\n  main.style.top = `${center[1]}px`;\n  for (let i = 0; i < items.length; i += 1) {\n    const item = items[i];\n    const elt = doc.createElement('div');\n    elt.className = 'marking-menu-item';\n    elt.dataset.itemId = item.id;\n    elt.dataset.itemAngle = item.angle;\n    elt.innerHTML += '<div class=\"marking-menu-line\"></div>';\n    elt.innerHTML += `<div class=\"marking-menu-label\">${item.name}</div>`;\n    main.appendChild(elt);\n  }\n  return main;\n};\n\n/**\n * Create the Menu display.\n * @param {HTMLElement} parent - The parent node.\n * @param {ItemModel} model - The model of the menu to open.\n * @param {[int, int]} center - The center of the menu.\n * @param {String} [current] - The currently active item.\n * @param {Document} [options] - Menu options.\n * @param {Document} [options.doc=document] - The root document of the menu.\n *                                            Mostly useful for testing purposes.\n * @return {{ setActive, remove }} - The menu controls.\n */\nconst createMenu = (\n  parent,\n  model,\n  center,\n  current,\n  { doc = document } = {}\n) => {\n  // Create the DOM.\n  const main = template({ items: model.children, center }, doc);\n  parent.appendChild(main);\n\n  // Clear any  active items.\n  const clearActiveItems = () => {\n    Array.from(main.querySelectorAll('.active')).forEach((itemDom) =>\n      itemDom.classList.remove('active')\n    );\n  };\n\n  // Return an item DOM element from its id.\n  const getItemDom = (itemId) =>\n    main.querySelector(`.marking-menu-item[data-item-id=\"${itemId}\"]`);\n\n  // Mark an item as active.\n  const setActive = (itemId) => {\n    // Clear any  active items.\n    clearActiveItems();\n\n    // Set the active class.\n    if (itemId || itemId === 0) {\n      getItemDom(itemId).classList.add('active');\n    }\n  };\n\n  // Function to remove the menu.\n  const remove = () => parent.removeChild(main);\n\n  // Initialize the menu.\n  if (current) setActive(current);\n\n  // Create the interface.\n  return { setActive, remove };\n};\n\nexport default createMenu;\n","/**\n * @param {HTMLElement} parent - The parent node.\n * @param {Document} options - Options.\n * @param {Document} [options.doc=document] - The root document. Mostly useful for testing purposes.\n * @param {number} [options.lineWidth=2] - The width of the stroke.\n * @param {string} [options.lineColor='black'] - CSS representation of the stroke color.\n * @param {number} [options.startPointRadius=0] - The radius of the start point.\n * @param {number} [options.startPointColor=options.lineColor] - CSS representation of the start\n *                                                               point color.\n * @param {number} [options.ptSize=1 / devicePixelRatio] - The size of the canvas points\n *                                                         (px).\n * @return {{ clear, setStroke, remove }} The canvas methods.\n */\nexport default (\n  parent,\n  {\n    doc = document,\n    lineWidth = 2,\n    lineColor = 'black',\n    pointRadius = 0,\n    pointColor = lineColor,\n    ptSize = window.devicePixelRatio ? 1 / window.devicePixelRatio : 1,\n  }\n) => {\n  // Create the canvas.\n  const { width, height } = parent.getBoundingClientRect();\n  const canvas = doc.createElement('canvas');\n  canvas.width = width / ptSize;\n  canvas.height = height / ptSize;\n  Object.assign(canvas.style, {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: `${width}px`,\n    height: `${height}px`,\n    'pointer-events': 'none',\n  });\n  parent.appendChild(canvas);\n\n  // Get the canvas' context and set it up\n  const ctx = canvas.getContext('2d');\n  // Scale to the device pixel ratio.\n  ctx.scale(1 / ptSize, 1 / ptSize);\n\n  /**\n   * @param {number[]} point - Position of the point to draw.\n   * @return {undefined}\n   */\n  const drawPoint = ([x, y]) => {\n    ctx.save();\n    ctx.strokeStyle = 'none';\n    ctx.fillStyle = pointColor;\n    ctx.beginPath();\n    ctx.moveTo(x + pointRadius, y);\n    ctx.arc(x, y, pointRadius, 0, 360);\n    ctx.fill();\n    ctx.restore();\n  };\n\n  /**\n   * Clear the canvas.\n   *\n   * @return {undefined}\n   */\n  const clear = () => {\n    ctx.clearRect(0, 0, width, height);\n  };\n\n  /**\n   * Draw the stroke.\n   *\n   * @param {List<number[]>} stroke - The new stroke.\n   * @return {undefined}\n   */\n  const drawStroke = (stroke) => {\n    ctx.save();\n    ctx.fillStyle = 'none';\n    ctx.lineJoin = 'round';\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n    ctx.beginPath();\n    stroke.forEach((point, i) => {\n      if (i === 0) ctx.moveTo(...point);\n      else ctx.lineTo(...point);\n    });\n    ctx.stroke();\n    ctx.restore();\n  };\n\n  /**\n   * Destroy the canvas.\n   * @return {undefined}\n   */\n  const remove = () => {\n    canvas.remove();\n  };\n\n  return { clear, drawStroke, drawPoint, remove };\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar rafThrottle = function rafThrottle(callback) {\n  var requestId = void 0;\n\n  var later = function later(context, args) {\n    return function () {\n      requestId = null;\n      callback.apply(context, args);\n    };\n  };\n\n  var throttled = function throttled() {\n    if (requestId === null || requestId === undefined) {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      requestId = requestAnimationFrame(later(this, args));\n    }\n  };\n\n  throttled.cancel = function () {\n    return cancelAnimationFrame(requestId);\n  };\n\n  return throttled;\n};\n\nexports.default = rafThrottle;","import { finalize, tap } from 'rxjs/operators';\nimport rafThrottle from 'raf-throttle';\n\n/**\n * Connect navigation notifications to menu opening and closing.\n *\n * @param {HTMLElement} parentDOM - The element where to append the menu.\n * @param {Observable} navigation$ - Notifications of the navigation.\n * @param {Function} createMenuLayout - Menu layout factory.\n * @param {Function} createUpperStrokeCanvas - Upper stroke canvas factory. The\n * upper stroke show the user interaction on the current menu, and the movements\n * in expert mode.\n * @param {Function} createLowerStrokeCanvas - Lower stroke canvas factory. The\n * lower stroke is stroke drawn below the menu. It keeps track of the previous\n * movements.\n * @param {Function} createGestureFeedback - Create gesture feedback.\n * @param {{error}} log - Logger.\n * @return {Observable} `navigation$` with menu opening and closing side effects.\n */\nexport default (\n  parentDOM,\n  navigation$,\n  createMenuLayout,\n  createUpperStrokeCanvas,\n  createLowerStrokeCanvas,\n  createGestureFeedback,\n  log\n) => {\n  // The menu object.\n  let menu = null;\n  // A stroke drawn on top of the menu.\n  let upperStrokeCanvas = null;\n  // A stroke drawn below the menu.\n  let lowerStrokeCanvas = null;\n  // The points of the lower strokes.\n  let lowerStroke = null;\n  // The points of the upper stroke.\n  let upperStroke = null;\n\n  const gestureFeedback = createGestureFeedback(parentDOM);\n\n  const closeMenu = () => {\n    menu.remove();\n    menu = null;\n  };\n\n  const openMenu = (model, position) => {\n    const cbr = parentDOM.getBoundingClientRect();\n    menu = createMenuLayout(parentDOM, model, [\n      position[0] - cbr.left,\n      position[1] - cbr.top,\n    ]);\n  };\n\n  const setActive = (id) => {\n    menu.setActive(id);\n  };\n\n  const startUpperStroke = (position) => {\n    upperStrokeCanvas = createUpperStrokeCanvas(parentDOM);\n    upperStroke = [position];\n    upperStrokeCanvas.drawStroke(upperStroke);\n  };\n\n  const noviceMove = rafThrottle((position) => {\n    if (upperStrokeCanvas) {\n      upperStrokeCanvas.clear();\n      if (position) {\n        upperStroke = [upperStroke[0], position];\n        upperStrokeCanvas.drawStroke(upperStroke);\n      }\n      upperStrokeCanvas.drawPoint(upperStroke[0]);\n    }\n  });\n\n  const expertDraw = rafThrottle((stroke) => {\n    // FIXME: Not very efficient.\n    if (upperStrokeCanvas) {\n      upperStrokeCanvas.clear();\n      upperStroke = stroke.slice();\n      upperStrokeCanvas.drawStroke(upperStroke);\n    }\n  });\n\n  const clearUpperStroke = () => {\n    upperStrokeCanvas.remove();\n    upperStrokeCanvas = null;\n    upperStroke = null;\n  };\n\n  const swapUpperStroke = () => {\n    lowerStroke = lowerStroke ? [...lowerStroke, ...upperStroke] : upperStroke;\n    clearUpperStroke();\n    lowerStrokeCanvas = lowerStrokeCanvas || createLowerStrokeCanvas(parentDOM);\n    lowerStrokeCanvas.drawStroke(lowerStroke);\n  };\n\n  const clearLowerStroke = () => {\n    if (lowerStrokeCanvas) {\n      lowerStrokeCanvas.remove();\n      lowerStrokeCanvas = null;\n    }\n    lowerStroke = null;\n  };\n\n  const showGestureFeedback = (isCanceled) => {\n    gestureFeedback.show(\n      lowerStroke ? [...lowerStroke, ...upperStroke] : upperStroke,\n      isCanceled\n    );\n  };\n\n  const cleanUp = () => {\n    // Make sure everything is cleaned upon completion.\n    if (menu) closeMenu();\n    if (upperStrokeCanvas) clearUpperStroke();\n    if (lowerStrokeCanvas) clearLowerStroke();\n    gestureFeedback.remove();\n    // eslint-disable-next-line no-param-reassign\n    parentDOM.style.cursor = '';\n  };\n\n  const onNotification = (notification) => {\n    switch (notification.type) {\n      case 'open': {\n        // eslint-disable-next-line no-param-reassign\n        parentDOM.style.cursor = 'none';\n        if (menu) closeMenu();\n        swapUpperStroke();\n        openMenu(notification.menu, notification.center);\n        startUpperStroke(notification.center);\n        noviceMove(notification.position);\n        break;\n      }\n      case 'change': {\n        setActive((notification.active && notification.active.id) || null);\n        break;\n      }\n      case 'select':\n      case 'cancel':\n        // eslint-disable-next-line no-param-reassign\n        parentDOM.style.cursor = '';\n        if (menu) closeMenu();\n        showGestureFeedback(notification.type === 'cancel');\n        clearUpperStroke();\n        clearLowerStroke();\n        break;\n      case 'start':\n        // eslint-disable-next-line no-param-reassign\n        parentDOM.style.cursor = 'crosshair';\n        startUpperStroke(notification.position);\n        break;\n      case 'draw':\n        expertDraw(notification.stroke);\n        break;\n      case 'move':\n        noviceMove(notification.position);\n        break;\n      default:\n        throw new Error(\n          `Invalid navigation notification type: ${notification.type}`\n        );\n    }\n  };\n\n  return navigation$.pipe(\n    tap({\n      next(notification) {\n        try {\n          onNotification(notification);\n        } catch (e) {\n          log.error(e);\n          throw e;\n        }\n      },\n      error(e) {\n        log.error(e);\n        throw e;\n      },\n    }),\n    finalize(() => {\n      try {\n        cleanUp();\n      } catch (e) {\n        log.error(e);\n        throw e;\n      }\n    })\n  );\n};\n","import createStrokeCanvas from './stroke';\n\nexport default (\n  parentDOM,\n  { duration, strokeOptions = {}, canceledStrokeOptions = {} }\n) => {\n  let strokeTimeoutEntries = [];\n\n  const show = (stroke, isCanceled = false) => {\n    const canvas = createStrokeCanvas(parentDOM, {\n      ...strokeOptions,\n      ...(isCanceled ? canceledStrokeOptions : {}),\n    });\n    canvas.drawStroke(stroke);\n    const timeoutEntry = {\n      canvas,\n      timeout: setTimeout(() => {\n        // Remove the entry from the strokeTimeoutEntries.\n        strokeTimeoutEntries = strokeTimeoutEntries.filter(\n          (x) => x !== timeoutEntry\n        );\n        // Clear the stroke canvas.\n        canvas.remove();\n      }, duration),\n    };\n    strokeTimeoutEntries.push(timeoutEntry);\n  };\n\n  const remove = () => {\n    strokeTimeoutEntries.forEach(({ timeout, canvas }) => {\n      clearTimeout(timeout);\n      canvas.remove();\n    });\n    strokeTimeoutEntries = [];\n  };\n\n  return { show, remove };\n};\n","import { deltaAngle } from './utils';\n\nconst getAngleRange = (items) => (items.length > 4 ? 45 : 90);\n\n/**\n * Represents an item of the Marking Menu.\n */\nexport class MMItem {\n  /**\n   * @param {String} id - The item's id. Required except for the root item.\n   * @param {String} name - The item's name. Required except for the root item.\n   * @param {Integer} angle - The item's angle. Required except for the root item.\n   * @param {object} [options] - Some additional options.\n   * @param {ItemModel} [options.parent] - The parent menu of the item.\n   * @param {List<ItemModel>} [options.children] - The children of the item menu.\n   */\n  constructor(id, name, angle, { parent, children } = {}) {\n    this.id = id;\n    this.name = name;\n    this.angle = angle;\n    this.children = children;\n    this.parent = parent;\n  }\n\n  isLeaf() {\n    return !this.children || this.children.length === 0;\n  }\n\n  isRoot() {\n    return !this.parent;\n  }\n\n  /**\n   * @param {String} childId - The identifier of the child to look for.\n   * @return {Item} the children with the id `childId`.\n   */\n  getChild(childId) {\n    return this.children.find((child) => child.id === childId);\n  }\n\n  /**\n   * @param {String} childName - The name of the children to look for.\n   * @return {Item} the children with the name `childName`.\n   */\n  getChildrenByName(childName) {\n    return this.children.filter((child) => child.name === childName);\n  }\n\n  /**\n   * @param {Integer} angle - An angle.\n   * @return {Item} the closest children to the angle `angle`.\n   */\n  getNearestChild(angle) {\n    return this.children.reduce((c1, c2) => {\n      const delta1 = Math.abs(deltaAngle(c1.angle, angle));\n      const delta2 = Math.abs(deltaAngle(c2.angle, angle));\n      return delta1 > delta2 ? c2 : c1;\n    });\n  }\n\n  /**\n   * @return {number} The maximum depth of the menu.\n   */\n  getMaxDepth() {\n    return this.isLeaf()\n      ? 0\n      : Math.max(0, ...this.children.map((child) => child.getMaxDepth())) + 1;\n  }\n\n  /**\n   * @return {number} The maximum breadth of the menu.\n   */\n  getMaxBreadth() {\n    return this.isLeaf()\n      ? 0\n      : Math.max(\n          this.children.length,\n          ...this.children.map((child) => child.getMaxBreadth())\n        );\n  }\n}\n\n// Create the model item from a list of items.\nconst recursivelyCreateModelItems = (\n  items,\n  baseId = undefined,\n  parent = undefined\n) => {\n  // Calculate the angle range for each items.\n  const angleRange = getAngleRange(items);\n  // Create the list of model items (frozen).\n  return Object.freeze(\n    items.map((item, i) => {\n      // Standard item id.\n      const stdId = baseId ? [baseId, i].join('-') : i.toString();\n      // Create the item.\n      const mmItem = new MMItem(\n        item.id == null ? stdId : item.id,\n        typeof item === 'string' ? item : item.name,\n        i * angleRange,\n        { parent }\n      );\n      // Add its children if any.\n      if (item.children) {\n        mmItem.children = recursivelyCreateModelItems(\n          item.children,\n          stdId,\n          mmItem\n        );\n      }\n      // Return it frozen.\n      return Object.freeze(mmItem);\n    })\n  );\n};\n\n/**\n * Create the marking menu model.\n *\n * @param {List<String|{name,children}>} itemList - The list of items.\n * @return {MMItem} - The root item of the model.\n */\nconst createModel = (itemList) => {\n  const menu = new MMItem(null, null, null);\n  menu.children = recursivelyCreateModelItems(itemList, undefined, menu);\n  return Object.freeze(menu);\n};\n\nexport default createModel;\n","import { tap, map, share, filter, pluck } from 'rxjs/operators';\nimport navigation from './navigation';\nimport {\n  createMenuLayout,\n  createStrokeCanvas,\n  connectLayout,\n  createGestureFeedback,\n} from './layout';\nimport createModel from './model';\nimport { watchDrags } from './move';\n\n// Clone a notification in a protected way so that the internal state cannot be corrupted.\nexport const exportNotification = (n) => ({\n  type: n.type,\n  mode: n.mode,\n  position: n.position ? n.position.slice() : undefined,\n  active: n.active,\n  selection: n.selection,\n  menuCenter: n.center ? n.center.slice() : undefined,\n  timeStamp: n.timeStamp,\n});\n\n/**\n * Create a Marking Menu.\n *\n * @param {List<String|{name,children}>} items - The list of items.\n * @param {HTMLElement} parentDOM - The parent node.\n * @param {Object} [options] - Configuration options for the menu.\n * @param {number} [options.minSelectionDist] - The minimum distance from the center to select an\n *                                              item.\n * @param {number} [options.minMenuSelectionDist] - The minimum distance from the center to open a\n *                                                  sub-menu.\n * @param {number} [options.subMenuOpeningDelay] - The dwelling delay before opening a sub-menu.\n * @param {number} [options.movementsThreshold] - The minimum distance between two points to be\n *                                                considered a significant movements and breaking\n *                                                the sub-menu dwelling delay.\n * @param {number} [options.noviceDwellingTime] - The dwelling time required to trigger the novice\n *                                                mode (and open the menu).\n * @param {number} [options.strokeColor] - The color of the gesture stroke.\n * @param {number} [options.strokeWidth] - The width of the gesture stroke.\n * @param {number} [options.strokeStartPointRadius] - The radius of the start point of the stroke\n *                                                    (appearing at the middle of the menu in novice\n *                                                    mode).\n * @param {number} [options.lowerStrokeColor] - The color of the lower stroke. The lower stroke is\n *                                              the stroke drawn below the menu. It keeps track of\n *                                              the previous movements.\n * @param {number} [options.lowerStrokeWidth] - The width of the lower stroke.\n * @param {number} [options.lowerStrokeStartPointRadius] - The radius of the start point of the\n *                                                         stroke.\n * @param {number} [options.gestureFeedbackStrokeWidth] - The width of the stroke of the gesture\n *                                                        feedback.\n * @param {number} [options.gestureFeedbackStrokeColor] - The color of the stroke of the gesture\n *                                                        feedback.\n * @param {number} [options.gestureFeedbackCanceledStrokeColor] - The color of the stroke of the\n *                                                        gesture feedback when the selection is\n *                                                        canceled.\n * @param {number} [options.gestureFeedbackDuration] - The duration of the gesture feedback.\n * @param {boolean} [options.notifySteps] - If true, every steps of the marking menu (include move)\n *                                          events, will be notified. Useful for logging.\n * @param {{error, info, warn, debug}} [options.log] - Override the default logger to use.\n * @return {Observable} An observable on menu selections.\n */\nexport default (\n  items,\n  parentDOM,\n  {\n    minSelectionDist = 40,\n    minMenuSelectionDist = 80,\n    subMenuOpeningDelay = 25,\n    movementsThreshold = 5,\n    noviceDwellingTime = 1000 / 3,\n    strokeColor = '#000',\n    strokeWidth = 4,\n    strokeStartPointRadius = 8,\n    lowerStrokeColor = '#777',\n    lowerStrokeWidth = strokeWidth,\n    lowerStrokeStartPointRadius = lowerStrokeWidth,\n    gestureFeedbackDuration = 1000,\n    gestureFeedbackStrokeWidth = strokeWidth,\n    gestureFeedbackCanceledStrokeColor = '#DE6C52',\n    gestureFeedbackStrokeColor = strokeColor,\n    notifySteps = false,\n    log = {\n      // eslint-disable-next-line no-console\n      error: console.error && console.error.bind(console),\n      // eslint-disable-next-line no-console\n      info: console.info && console.info.bind(console),\n      // eslint-disable-next-line no-console\n      warn: console.warn && console.warn.bind(console),\n      debug() {},\n    },\n  } = {}\n) => {\n  // Create the display options\n  const menuLayoutOptions = {};\n  const strokeCanvasOptions = {\n    lineColor: strokeColor,\n    lineWidth: strokeWidth,\n    pointRadius: strokeStartPointRadius,\n  };\n  const lowerStrokeCanvasOptions = {\n    lineColor: lowerStrokeColor,\n    lineWidth: lowerStrokeWidth,\n    pointRadius: lowerStrokeStartPointRadius,\n  };\n  const gestureFeedbackOptions = {\n    duration: gestureFeedbackDuration,\n    strokeOptions: {\n      lineColor: gestureFeedbackStrokeColor,\n      lineWidth: gestureFeedbackStrokeWidth,\n    },\n    canceledStrokeOptions: {\n      lineColor: gestureFeedbackCanceledStrokeColor,\n    },\n  };\n\n  // Create model and navigation observable.\n  const model = createModel(items);\n  const navigation$ = navigation(watchDrags(parentDOM), model, {\n    minSelectionDist,\n    minMenuSelectionDist,\n    subMenuOpeningDelay,\n    movementsThreshold,\n    noviceDwellingTime,\n  }).pipe(\n    tap(({ originalEvent }) => {\n      // Prevent default on every notifications.\n      if (originalEvent) originalEvent.preventDefault();\n    })\n  );\n\n  // Connect the engine's notifications to menu opening/closing.\n  const connectedNavigation$ = connectLayout(\n    parentDOM,\n    navigation$,\n    (parent, menuModel, center, current) =>\n      createMenuLayout(parent, menuModel, center, current, menuLayoutOptions),\n    (parent) => createStrokeCanvas(parent, strokeCanvasOptions),\n    (parent) => createStrokeCanvas(parent, lowerStrokeCanvasOptions),\n    (parent) => createGestureFeedback(parent, gestureFeedbackOptions),\n    log\n  );\n\n  // If every steps should be notified, just export connectedNavigation$.\n  if (notifySteps) {\n    return connectedNavigation$.pipe(map(exportNotification), share());\n  }\n  // Else, return an observable on the selections.\n  return connectedNavigation$.pipe(\n    filter((notification) => notification.type === 'select'),\n    pluck('selection'),\n    share()\n  );\n};\n"],"names":["mod","a","n","deltaAngle","alpha","beta","dist","point1","point2","sum","reduce","acc","x1i","i","x2i","Math","sqrt","ANGLE_ROUNDING","angle","b","c","lab","lbc","lac","cos","adjustedCos","max","min","angleABC","rad2deg","acos","round","findMaxEntry","list","comp","slice","result","item","index","toPolar","px","py","cx","cy","x","y","azymuth","atan2","radius","createPEventFromTouchEvent","touchEvt","touchList","Array","from","targetTouches","sumX","t","clientX","sumY","clientY","meanX","length","meanY","originalEvent","position","timeStamp","createPEventFromMouseEvent","mouseEvt","mouseDrags","rootDOM","fromEvent","pipe","map","downEvt","drag$","merge","of","takeUntil","publishBehavior","connect","o","touchDrags","filter","evt","firstEvent","startWith","watchDrags","dragObsFactories","f","movementsThreshold","scan","cur","prev","type","pass","delay","scheduler","undefined","first","longMoves","debounceTime","last","withLatestFrom","_","last_","initStroke","typeOpts","notification","stroke","noviceMoves","menu","menuCenter","minSelectionDist","moves$","active","getNearestChild","center","performance","now","Date","share","end$","isLeaf","selection","menuSelection","move$","subMenuOpeningDelay","minMenuSelectionDist","dwellings","subMenuNavigation","menuSelection$","subNav","navOptions","noviceNavigation","noviceMoves_","menuSelection_","subMenuNavigation_","subMenuNavigation$","take","switchAll","findNextPointFurtherThan","pointList","minDist","direction","startIndex","refPoint","step","abs","findMiddlePointForMinAngle","pointA","pointC","endIndex","minAngle","Infinity","maxAngleIndex","thisAngle","getStrokeArticulationPoints","expectedSegmentLength","angleThreshold","w","articulationPoints","ai","ci","labi","lbci","bi","push","res","current","pointsToSegments","points","segments","walkMMModel","model","segmentAngle","divideLongestSegment","longestI","longest","s1","s2","findMMItem","maxDepth","getMaxDepth","currentSegments","currentItem","recognizeMMStroke","maxDepth_","requireMenu","requireLeaf","Error","maxMenuBreadth","getMaxBreadth","strokeLength","sensitivity","minSegmentSize","seg","parent","draw$","draw","e","recognize","confirmedNoviceNavigationHOO","start","options","noviceDwellingTime","mergeMap","start_","skip","mode","expertToNoviceSwitchHOO","isRoot","confirmedExpertNavigationHOO","expertToNoviceSwitchHOO_","expertNav$","expertNavigation","startup","navigationFromDrag","confirmedExpertNavigationHOO_","confirmedNoviceNavigationHOO_","startup_","startUp$","confirmedExpertNavigation$$","confirmedNoviceNavigation$$","confirmedNavigation$$","race","drags$","navigationFromDrag_","exhaustMap","template","doc","items","main","createElement","className","style","left","top","elt","dataset","itemId","id","itemAngle","innerHTML","name","appendChild","createMenu","document","children","clearActiveItems","querySelectorAll","forEach","itemDom","classList","remove","getItemDom","querySelector","setActive","add","removeChild","lineWidth","lineColor","pointRadius","pointColor","ptSize","window","devicePixelRatio","width","height","getBoundingClientRect","canvas","Object","assign","ctx","getContext","scale","drawPoint","save","strokeStyle","fillStyle","beginPath","moveTo","arc","fill","restore","clear","clearRect","drawStroke","lineJoin","lineCap","point","lineTo","parentDOM","navigation$","createMenuLayout","createUpperStrokeCanvas","createLowerStrokeCanvas","createGestureFeedback","log","upperStrokeCanvas","lowerStrokeCanvas","lowerStroke","upperStroke","gestureFeedback","closeMenu","openMenu","cbr","startUpperStroke","noviceMove","rafThrottle","expertDraw","clearUpperStroke","swapUpperStroke","clearLowerStroke","showGestureFeedback","isCanceled","show","cleanUp","cursor","onNotification","tap","next","error","finalize","duration","strokeOptions","canceledStrokeOptions","strokeTimeoutEntries","createStrokeCanvas","timeoutEntry","timeout","setTimeout","clearTimeout","getAngleRange","MMItem","constructor","getChild","childId","find","child","getChildrenByName","childName","c1","c2","delta1","delta2","recursivelyCreateModelItems","baseId","angleRange","freeze","stdId","join","toString","mmItem","createModel","itemList","exportNotification","strokeColor","strokeWidth","strokeStartPointRadius","lowerStrokeColor","lowerStrokeWidth","lowerStrokeStartPointRadius","gestureFeedbackDuration","gestureFeedbackStrokeWidth","gestureFeedbackCanceledStrokeColor","gestureFeedbackStrokeColor","notifySteps","console","bind","info","warn","debug","menuLayoutOptions","strokeCanvasOptions","lowerStrokeCanvasOptions","gestureFeedbackOptions","navigation","preventDefault","connectedNavigation$","connectLayout","menuModel","pluck"],"mappings":"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"}